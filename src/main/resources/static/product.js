document.addEventListener('DOMContentLoaded', function () {
    // ----------------- Thu g·ªçn header khi scroll -----------------
    let lastScrollY = window.scrollY;
    const header = document.getElementById("siteHeader");
    window.addEventListener("scroll", () => {
        if (window.scrollY > lastScrollY) {
            header?.classList.add("compact"); // khi k√©o xu·ªëng
        } else {
            header?.classList.remove("compact"); // khi k√©o l√™n
        }
        lastScrollY = window.scrollY;
    });

    // ----------------- CSRF helper -----------------
    function getCsrfHeaders() {
        const token = document.querySelector('meta[name="_csrf"]')?.content;
        const header = document.querySelector('meta[name="_csrf_header"]')?.content;
        return (token && header) ? { [header]: token } : {};
    }

    // ----------------- Bi·∫øn chung -----------------
    const buyNowBtn = document.getElementById('buyNowBtn');
    const addToCartBtn = document.getElementById('addToCartBtn');
    const applyBtn = document.getElementById('applyVoucherBtn');
    const voucherInput = document.getElementById('voucherCode');
    const voucherMessage = document.getElementById('voucherMessage');
    const variantRadios = document.querySelectorAll("input[name='variantId']");
    const variantIdInput = document.getElementById('variantIdInput');
    const amountInput = document.getElementById('amountInput');

    let discountedTotal = null; // üí∞ T·ªïng sau gi·∫£m
    let originalPrice = null; // üí∞ Gi√° g·ªëc c·ªßa variant ƒë∆∞·ª£c ch·ªçn

    // ----------------- ƒê·ªìng b·ªô variant ƒë∆∞·ª£c ch·ªçn -----------------
    function syncVariantFromRadio() {
        const checked = Array.from(variantRadios).find(r => r.checked);
        if (checked) {
            variantIdInput.value = checked.value;
            buyNowBtn.disabled = false;
            addToCartBtn.disabled = false;

            // ‚úÖ C·∫≠p nh·∫≠t gi√° hi·ªÉn th·ªã + l∆∞u gi√° g·ªëc
            const priceEl = document.querySelector('.price');
            const priceText = checked.nextElementSibling.querySelector('span:nth-child(2)')?.innerText;
            if (priceEl && priceText) {
                priceEl.innerText = priceText;
                originalPrice = parseFloat(priceText.replace(/[^\d]/g, '')) || 0; // L∆∞u gi√° g·ªëc th·∫≠t
            }
        } else if (!variantIdInput.value) {
            buyNowBtn.disabled = true;
            addToCartBtn.disabled = true;
        }
    }
    variantRadios.forEach(radio => radio.addEventListener('change', syncVariantFromRadio));
    syncVariantFromRadio();

    // ----------------- √Åp d·ª•ng voucher -----------------
    applyBtn?.addEventListener('click', async function () {
        const code = voucherInput.value.trim();
        if (!code) {
            voucherMessage.textContent = '‚ö†Ô∏è Vui l√≤ng nh·∫≠p m√£ voucher!';
            voucherMessage.style.color = 'red';
            return;
        }

        // L·∫•y gi√° g·ªëc t·ª´ text v√† nh√¢n v·ªõi s·ªë l∆∞·ª£ng
        const quantity = parseInt(amountInput.value || '1', 10);
        const total = (originalPrice || 0) * quantity; // ‚úÖ D√πng gi√° g·ªëc, kh√¥ng d√πng .price ƒë√£ gi·∫£m

        if (!total || total <= 0) {
            voucherMessage.textContent = '‚ùå Kh√¥ng th·ªÉ √°p d·ª•ng v√¨ kh√¥ng x√°c ƒë·ªãnh ƒë∆∞·ª£c gi√° s·∫£n ph·∫©m!';
            voucherMessage.style.color = 'red';
            return;
        }

        try {
            const res = await fetch(`/api/vouchers/apply?code=${encodeURIComponent(code)}&total=${total}`);
            if (!res.ok) throw new Error('Kh√¥ng th·ªÉ √°p d·ª•ng voucher');

            const data = await res.json();
            discountedTotal = data.discountedTotal;

            voucherMessage.textContent =
                `‚úÖ Gi·∫£m ${data.discountAmount.toLocaleString()}ƒë! T·ªïng m·ªõi: ${data.discountedTotal.toLocaleString()}ƒë`;
            document.querySelector('.price').innerText = data.discountedTotal.toLocaleString() + ' ƒë';
            // üîß C·∫≠p nh·∫≠t gi√° hi·ªÉn th·ªã tr√™n giao di·ªán
            const priceEl = document.querySelector('.price');
            if (priceEl) {
                priceEl.innerText = data.discountedTotal.toLocaleString() + ' ƒë';
            }
        } catch (err) {
            console.error('‚ùå Voucher error:', err);
            voucherMessage.textContent = '‚ùå M√£ kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n!';
            voucherMessage.style.color = 'red';
            discountedTotal = null;
        }
    });

    // ----------------- Mua ngay (VNPAY) -----------------
    buyNowBtn?.addEventListener('click', async function () {
        if (!sessionCustomerId || sessionCustomerId === 'null') {
            alert('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ mua s·∫£n ph·∫©m!');
            window.location.href = '/login.html';
            return;
        }

        const variantId = variantIdInput.value;
        if (!variantId) {
            alert('Vui l√≤ng ch·ªçn g√≥i s·∫£n ph·∫©m!');
            return;
        }

        const quantity = parseInt(amountInput.value || '1', 10);
        const voucherCode = document.getElementById('voucherCode')?.value?.trim() || null;

        const body = {
            customerId: parseInt(sessionCustomerId),
            items: [{ variantId: parseInt(variantId), quantity }],
            orderInfo: "Thanh to√°n " + productName,
            voucherCode: voucherCode,
            totalAfterDiscount: discountedTotal
        };

        const headers = { 'Content-Type': 'application/json', ...getCsrfHeaders() };

        try {
            const res = await fetch('/api/payment/create', {
                method: 'POST',
                headers,
                body: JSON.stringify(body),
                credentials: 'same-origin'
            });

            if (!res.ok) {
                const text = await res.text();
                console.error('‚ùå Payment create failed:', res.status, text);
                alert('Kh√¥ng th·ªÉ t·∫°o thanh to√°n. Vui l√≤ng th·ª≠ l·∫°i.');
                return;
            }

            const data = await res.json();
            if (data && data.paymentUrl) {
                window.location.href = data.paymentUrl;
            } else {
                alert('Kh√¥ng c√≥ URL thanh to√°n tr·∫£ v·ªÅ!');
                console.error('‚ö†Ô∏è Response thi·∫øu paymentUrl:', data);
            }
        } catch (err) {
            console.error('‚ö†Ô∏è Error creating payment:', err);
            alert('C√≥ l·ªói x·∫£y ra khi t·∫°o thanh to√°n!');
        }
    });

    // ----------------- Ghi log ƒë·ªÉ ki·ªÉm tra -----------------
    console.log("‚úÖ JS loaded: product.js ready");
});
